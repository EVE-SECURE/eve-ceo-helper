<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EveLib.EveOnline</name>
    </assembly>
    <members>
        <member name="T:eZet.EveLib.Modules.ApiKeyType">
            <summary>
                Eve Online API Key Types
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.ApiKeyType.Account">
            <summary>
                Key with access to all characters.
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.ApiKeyType.Character">
            <summary>
                Key with access to a single character.
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.ApiKeyType.Corporation">
            <summary>
                Key with access to a single corporation.
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.ApiKey">
            <summary>
                Represents a general API Account key. This type can be used if the exact type of the key is unknown, but prevents
                access to Characters and Corporations.
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.BaseEntity">
            <summary>
                Provides base properties and methods for Eve Online API classes.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.BaseEntity.#ctor">
            <summary>
            Default construcor
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.BaseEntity.requestAsync``1(System.String,System.Object[])">
            <summary>
                Performs a request on the requester, using the provided arguments.
            </summary>
            <typeparam name="T">The type used for response deserialization.</typeparam>
            <param name="relUri">A relative path to the resource to be requested.</param>
            <param name="args">Arguments for the request.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.BaseEntity.requestAsync``1(System.String,eZet.EveLib.Modules.ApiKey)">
            <summary>
                Performs a request on the requester, using the provided arguments.
            </summary>
            <typeparam name="T">The type used for response deserialization.</typeparam>
            <param name="relUri">A relative path to the resource to be requested.</param>
            <param name="key">An API Key to be used with this request.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.BaseEntity.requestAsync``1(System.String,eZet.EveLib.Modules.ApiKey,System.Object[])">
            <summary>
                Performs a request on the requester, using the provided arguments.
            </summary>
            <typeparam name="T">The type used for response deserialization.</typeparam>
            <param name="relUri">A relative path to the resource to be requested.</param>
            <param name="key">An API Key to be used with this request.</param>
            <param name="args">Arguments for the request.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.BaseEntity.generateQueryString(eZet.EveLib.Modules.ApiKey,System.Object[])">
            <summary>
                Generates a query string from the Api key and supplied arguments
            </summary>
            <param name="key">Optional; api key to generate query from</param>
            <param name="args">Optional; arguments to generate query from</param>
            <returns></returns>
        </member>
        <member name="P:eZet.EveLib.Modules.BaseEntity.EnableCacheLoad">
            <summary>
                Gets or sets whether data can be loaded from the cache.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.BaseEntity.EnableCacheStore">
            <summary>
                Gets or sets whether data can be stored in the cache.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.BaseEntity.IsCacheHandler">
            <summary>
                Returns true if the current request handler supports caching.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.BaseEntity.BaseUri">
            <summary>
                Gets or sets the base url for entity requests
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.BaseEntity.RequestHandler">
            <summary>
                Gets or sets the requester this entity uses to perform requests.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.#ctor(System.Int64,System.String)">
            <summary>
                Creates a new instance using the provided key id and vcode.
            </summary>
            <param name="keyId"></param>
            <param name="vCode"></param>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.#ctor(eZet.EveLib.Modules.ApiKey)">
            <summary>
                Creates a new ApiKey using data from an existing key.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.GetActualKey">
            <summary>
                Returns a new Key for this KeyIDs actual type. It preserves any key data, so the returned object comes
                pre-initialized.
                The returned key should be cast to it's real type by using GetType().
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.Reset">
            <summary>
                This de-initializes the key and it's data, allowing it to be fetched again from the API with Init() or InitAsync().
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.Init">
            <summary>
                Initiates all properties on this object. Method will return immediately if this object is already initialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.InitAsync">
            <summary>
                Initiates all properties on this object asynchronously. Method will return immediately if this object is already
                initialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.GetApiKeyInfo">
            <summary>
                Returns api key info. Calling Init() or InitAsync() will store all information from this endpoint in the key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.GetApiKeyInfoAsync">
            <summary>
                Returns api key info. Calling Init() or InitAsync() will store all information from this endpoint in the key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.GetCharacterList">
            <summary>
                Returns a list of all characters on this account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.GetCharacterListAsync">
            <summary>
                Returns a list of all characters on this account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.IsValidKey">
            <summary>
                Returns true if this key is valid, otherwise false. Note: If this object has not already been initialized, this
                will send a web request to the API.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.ApiKey.IsValidKeyAsync">
            <summary>
                Returns true if this key is valid, otherwise false. Note: If this object has not already been initialized, this
                will send a web request to the API.
            </summary>
            <returns></returns>
        </member>
        <member name="P:eZet.EveLib.Modules.ApiKey.ApiKeyInfo">
            <summary>
                Gets or sets the ApiKeyData used to initialize properties.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.ApiKey.KeyId">
            <summary>
                Gets the key ID for this key.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.ApiKey.VCode">
            <summary>
                Gets the VCode for this key.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.ApiKey.IsInitialized">
            <summary>
                Returns true if this key is initialized, or false otherwise.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.ApiKey.AccessMask">
            <summary>
                Gets the CAK access mask of this key. Note: If this object has not already been initialized, this will send a web
                request to the API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.ApiKey.KeyType">
            <summary>
                Gets the type of this key. Note: If this object has not already been initialized, this will send a web request to
                the API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.ApiKey.ExpiryDate">
            <summary>
                Gets the expiration date of this key. Note: If this object has not already been initialized, this will send a web
                request to the API.
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Character">
            <summary>
                Provides access to all API calls relating to a specific character, that is, URIs prefixed with /char in CCPs API.
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Character.AccountKey">
            <summary>
                The Wallet identifier. For characters this is always 1000.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.#ctor(System.Int32,System.String,System.Int64)">
            <summary>
                Creates a new Character using the provided key data and character id.
            </summary>
            <param name="keyId">Eve API Key ID</param>
            <param name="vCode">Eve API Verification Code (vCode)</param>
            <param name="characterId">Eve Character ID</param>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.#ctor(eZet.EveLib.Modules.CharacterKey,System.Int64)">
            <summary>
                Creates a new Character. If the CharacterKey is initialized, the Character will also be initialized with data from
                the Key.
            </summary>
            <param name="apiKey">A valid CharacterKey</param>
            <param name="characterId">A valid Eve Online Character ID</param>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.Reset">
            <summary>
                Resets the properties for this Character and it's CharacterKey, allowing new data to be fethed with Init() or
                InitAsync().
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.Init">
            <summary>
                Initializes this Characters properties with values fetched from the API. Returns immediately if this character is
                already initialized.
            </summary>
            <returns>This Character</returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.InitAsync">
            <summary>
                Initializes this Characters properties with values fetched from the API. Returns immediately if this character is
                already initialized.
            </summary>
            <returns>This Character</returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetCharacterInfo">
            <summary>
                Returns general information about the character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetCharacterInfoAsync">
            <summary>
                Returns general information about the character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetAccountBalance">
            <summary>
                Returns the ISK balance of a character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetAccountBalanceAsync">
            <summary>
                Returns the ISK balance of a character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetAssetList">
            <summary>
                Returns a list of assets owned by a character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetAssetListAsync">
            <summary>
                Returns a list of assets owned by a character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetCalendarEventAttendees(System.Int64)">
            <summary>
                Returns a list of all invited attendees for a given event.
                <para> </para>
                NOTE: A call to Upcoming Calendar Events must be made prior to calling this API. Otherwise you will receive an
                error:
                <para> </para>
                216: Calendar Event List not populated with upcoming events. You cannot request any random eventID.
            </summary>
            <param name="eventId">The id of the event.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetCalendarEventAttendeesAsync(System.Int64)">
            <summary>
                Returns a list of all invited attendees for a given event.
                <para> </para>
                NOTE: A call to Upcoming Calendar Events must be made prior to calling this API. Otherwise you will receive an
                error:
                <para> </para>
                216: Calendar Event List not populated with upcoming events. You cannot request any random eventID.
            </summary>
            <param name="eventId">The id of the event.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetCharacterSheet">
            <summary>
                Returns attributes relating to a specific character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetCharacterSheetAsync">
            <summary>
                Returns attributes relating to a specific character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContactList">
            <summary>
                Returns the character's contact and watch lists, incl. agents and respective standings set by the character. Also
                includes that character's corporation and/or alliance contacts.
                <para></para>
                See the Standings API for standings towards the character from agents and NPC entities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContactListAsync">
            <summary>
                Returns the character's contact and watch lists, incl. agents and respective standings set by the character. Also
                includes that character's corporation and/or alliance contacts.
                <para></para>
                See the Standings API for standings towards the character from agents and NPC entities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContactNotifications">
            <summary>
                Lists the notifications received about having been added to someone's contact list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContactNotificationsAsync">
            <summary>
                Lists the notifications received about having been added to someone's contact list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContracts">
            <summary>
                Lists the personal contracts for a character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContractsAsync">
            <summary>
                Lists the personal contracts for a character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContractItems(System.Int64)">
            <summary>
                Lists items that a specified contract contains.
            </summary>
            <param name="contractId">A contract id.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContractItemsAsync(System.Int64)">
            <summary>
                Lists items that a specified contract contains.
            </summary>
            <param name="contractId">A contract id.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContractBids">
            <summary>
                Lists the latest bids that have been made to any recent auctions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetContractBidsAsync">
            <summary>
                Lists the latest bids that have been made to any recent auctions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetFactionWarfareStats">
            <summary>
                If the character is enlisted in Factional Warfare, this will return statistics regarding factional warfare for this
                character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetFactionWarfareStatsAsync">
            <summary>
                If the character is enlisted in Factional Warfare, this will return statistics regarding factional warfare for this
                character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetIndustryJobs">
            <summary>
                Returns the characters industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetIndustryJobsAsync">
            <summary>
                Returns the characters industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetNewIndustryJobsAsync">
            <summary>
                Returns the currently running industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetNewIndustryJobs">
            <summary>
                Returns the currently running industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetIndustryJobsHistoryAsync">
            <summary>
                Returns currently running and ended industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetIndustryJobsHistory">
            <summary>
                Returns currently running and ended industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetKillLog(System.Int64)">
            <summary>
                Returns a list of kills where this character received the final blow and losses of this character.
                <para></para>
                Returns the 25 most recent kills. You can walk back with the killId parameter.
            </summary>
            <param name="killId">Optional; if present, return the most recent kills before the specified killID.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetKillLogAsync(System.Int64)">
            <summary>
                Returns a list of kills where this character received the final blow and losses of this character.
                <para></para>
                Returns the 25 most recent kills. You can walk back with the killId parameter.
            </summary>
            <param name="killId">Optional; if present, return the most recent kills before the specified killID.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetLocations(System.Int64[])">
            <summary>
                Call will return the items name (or its type name if no user defined name exists) as well as their x,y,z
                coordinates.
                <para></para>
                Coordinates should all be 0 for valid locations located inside of stations.
            </summary>
            <param name="list">A list of item ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetLocationsAsync(System.Int64[])">
            <summary>
                Call will return the items name (or its type name if no user defined name exists) as well as their x,y,z
                coordinates.
                <para></para>
                Coordinates should all be 0 for valid locations located inside of stations.
            </summary>
            <param name="list">A list of item ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMailBodies(System.Int64[])">
            <summary>
                Returns the bodies of headers that have already been fetched with the MailMessages call.
                <para></para>
                It will also return a list of missing IDs that could not be accessed. Bodies cannot be accessed if you have not
                called for their headers recently.
            </summary>
            <param name="list">A list of message ids from GetMailMessages.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMailBodiesAsync(System.Int64[])">
            <summary>
                Returns the bodies of headers that have already been fetched with the MailMessages call.
                <para></para>
                It will also return a list of missing IDs that could not be accessed. Bodies cannot be accessed if you have not
                called for their headers recently.
            </summary>
            <param name="list">A list of message ids from GetMailMessages.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMailingLists">
            <summary>
                Returns an XML document listing all mailing lists the character is currently a member of.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMailingListsAsync">
            <summary>
                Returns an XML document listing all mailing lists the character is currently a member of.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMailMessages">
            <summary>
                Returns the message headers for mail.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMailMessagesAsync">
            <summary>
                Returns the message headers for mail.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMarketOrders(System.Int64)">
            <summary>
                Returns a list of market orders for your character.
            </summary>
            <param name="orderId">Optional; market order ID to fetch an order that is no longer open.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMarketOrdersAsync(System.Int64)">
            <summary>
                Returns a list of market orders for your character.
            </summary>
            <param name="orderId">Optional; market order ID to fetch an order that is no longer open.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMedals">
            <summary>
                Returns a list of medals the character has.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetMedalsAsync">
            <summary>
                Returns a list of medals the character has.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetNotifications">
            <summary>
                Returns the message headers for notifications.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetNotificationsAsync">
            <summary>
                Returns the message headers for notifications.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetNotificationTexts(System.Int64[])">
            <summary>
                Returns the message bodies for notifications. Headers need to be requested with GetNotifications first.
            </summary>
            <param name="ids">A list of notification ids obtained from GetNotifications.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetNotificationTextsAsync(System.Int64[])">
            <summary>
                Returns the message bodies for notifications. Headers need to be requested with GetNotifications first.
            </summary>
            <param name="ids">A list of notification ids obtained from GetNotifications.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetResearch">
            <summary>
                Returns information about agents character is doing research with.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetResearchAsync">
            <summary>
                Returns information about agents character is doing research with.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetSkillTraining">
            <summary>
                Returns the skill the character is currently training.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetSkillTrainingAsync">
            <summary>
                Returns the skill the character is currently training.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetSkillQueue">
            <summary>
                Returns the skill queue of the character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetSkillQueueAsync">
            <summary>
                Returns the skill queue of the character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetStandings">
            <summary>
                Returns the standings towards a character from agents, NPC corporations and factions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetStandingsAsync">
            <summary>
                Returns the standings towards a character from agents, NPC corporations and factions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetUpcomingCalendarEvents">
            <summary>
                Returns a list of all upcoming calendar events for a given character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetUpcomingCalendarEventsAsync">
            <summary>
                Returns a list of all upcoming calendar events for a given character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetWalletJournal(System.Int32,System.Int64)">
            <summary>
                Returns a list of journal transactions for the character.
            </summary>
            <param name="count">Optional; Used for specifying the amount of rows to return. Default is 50. Maximum is 2560.</param>
            <param name="fromId">Optional; Used for walking the journal backwards to get more entries.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetWalletJournalAsync(System.Int32,System.Int64)">
            <summary>
                Returns a list of journal transactions for the character.
            </summary>
            <param name="count">Optional; Used for specifying the amount of rows to return. Default is 50. Maximum is 2560.</param>
            <param name="fromId">Optional; Used for walking the journal backwards to get more entries.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetWalletTransactions(System.Int32,System.Int64)">
            <summary>
                Returns market transactions for the character.
            </summary>
            <param name="count">Optional; Used for specifying the amount of rows to return. Default is 50. Maximum is 2560.</param>
            <param name="fromId">Optional; Used for walking the journal backwards to get more entries.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetWalletTransactionsAsync(System.Int32,System.Int64)">
            <summary>
                Returns market transactions for the character.
            </summary>
            <param name="count">Optional; Used for specifying the amount of rows to return. Default is 50. Maximum is 2560.</param>
            <param name="fromId">Optional; Used for walking the journal backwards to get more entries.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetPlanetaryColonies">
            <summary>
                Returns planetary colonies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetPlanetaryColoniesAsync">
            <summary>
                Returns planetary colonies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetPlanetaryPins(System.Int64)">
            <summary>
                Returns planetary pins for a planet.
            </summary>
            <param name="planetId">Planet ID</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetPlanetaryPinsAsync(System.Int64)">
            <summary>
                Returns planetary pins for a planet.
            </summary>
            <param name="planetId">Planet ID</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetPlanetaryRoutes(System.Int64)">
            <summary>
                Returns planetary routes for a planet.
            </summary>
            <param name="planetId">Planet ID</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetPlanetaryRoutesAsync(System.Int64)">
            <summary>
                Returns planetary routes for a planet.
            </summary>
            <param name="planetId">Planet ID</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetPlanetaryLinks(System.Int64)">
            <summary>
                Returns planetary links for a planet.
            </summary>
            <param name="planetId">Planet ID</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Character.GetPlanetaryLinksAsync(System.Int64)">
            <summary>
                Returns planetary links for a planet.
            </summary>
            <param name="planetId">Planet ID</param>
            <returns></returns>
        </member>
        <member name="P:eZet.EveLib.Modules.Character.ApiKey">
            <summary>
                Gets the CharacterKey for this Character.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Character.CharacterId">
            <summary>
                Gets the Character ID.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Character.CharacterName">
            <summary>
                Gets the name of this character. Note: If this object has not already been initialized, this will send a web
                request to the API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Character.CorporationId">
            <summary>
                Gets the Corporation ID. Note: Note: If this object has not already been initialized, this will send a web request
                to the API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Character.CorporationName">
            <summary>
                Gets the corporation name. Note: If this object has not already been initialized, this will send a web request to
                the API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Character.AllianceId">
            <summary>
                Gets the Alliance ID. Note: If this object has not already been initialized, this will send a web request to the
                API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Character.AllianceName">
            <summary>
                Gets the Alliance name. Note: If this object has not already been initialized, this will send a web request to the
                API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Character.FactionId">
            <summary>
                Gets the Faction ID. Note: If this object has not already been initialized, this will send a web request to the
                API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Character.FactionName">
            <summary>
                Gets the Faction name. Note: If this object has not already been initialized, this will send a web request to the
                API.
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.CharacterKey">
            <summary>
                Provides access to Character objects and related API calls.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.CharacterKey.#ctor(System.Int64,System.String)">
            <summary>
                Creates a new key using the specified key id and vcode.
            </summary>
            <param name="keyId"></param>
            <param name="vCode"></param>
        </member>
        <member name="M:eZet.EveLib.Modules.CharacterKey.#ctor(eZet.EveLib.Modules.ApiKey)">
            <summary>
                Creates a new CharacterKey using data from an existing key
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:eZet.EveLib.Modules.CharacterKey.InitAsync">
            <summary>
                Initializes properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.CharacterKey.GetAccountStatus">
            <summary>
                Returns basic account information including when the subscription lapses, total play time in minutes, total times
                logged on and date of account creation.
                <para></para>
                In the case of game time code accounts it will also look for available offers of time codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.CharacterKey.GetAccountStatusAsync">
            <summary>
                Returns basic account information including when the subscription lapses, total play time in minutes, total times
                logged on and date of account creation.
                <para></para>
                In the case of game time code accounts it will also look for available offers of time codes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:eZet.EveLib.Modules.CharacterKey.Characters">
            <summary>
                Gets a list of Characters this key has access to.
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Eve">
            <summary>
                Provides access to API calls that do not require a valid API key or character/corporation ID, and are not covered
                by Image or Map. Paths: /eve, /misc, /server, /api
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetAllianceList(System.Boolean)">
            <summary>
                Returns a list of alliances in eve.
            </summary>
            <param name="extended">Optional; If true, includes corporations.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetAllianceListAsync(System.Boolean)">
            <summary>
                Returns a list of alliances in eve.
            </summary>
            <param name="extended">Optional; If true, includes corporations.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCertificateTree">
            <summary>
                Returns a list of certificates in eve.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCertificateTreeAsync">
            <summary>
                Returns a list of certificates in eve.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCharacterAffiliation(System.Int64[])">
            <summary>
                Returns the characterName, characterID, corporationName, corporationID, allianceName, allianceID, factionName,
                factionID for the given list of IDs.
            </summary>
            <param name="list">A list of character ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCharacterAffiliationAsync(System.Int64[])">
            <summary>
                Returns the characterName, characterID, corporationName, corporationID, allianceName, allianceID, factionName,
                factionID for the given list of IDs.
            </summary>
            <param name="list">A list of character ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCharacterId(System.String[])">
            <summary>
                Returns the ownerID for a given character, faction, alliance or corporation name, or the typeID for other objects
                such as stations, solar systems, planets, etc.
            </summary>
            <param name="list">A list of ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCharacterIdAsync(System.String[])">
            <summary>
                Returns the ownerID for a given character, faction, alliance or corporation name, or the typeID for other objects
                such as stations, solar systems, planets, etc.
            </summary>
            <param name="list">A list of ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCharacterInfo(System.Int64)">
            <summary>
                Returns the same data as a show info call on the character would do in the client. For the extended API key
                version, see Character.GetCharacterInfoAsync.
            </summary>
            <param name="id">The character id.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCharacterInfoAsync(System.Int64)">
            <summary>
                Returns the same data as a show info call on the character would do in the client. For the extended API key
                version, see Character.GetCharacterInfoAsync.
            </summary>
            <param name="id">The character id.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCharacterName(System.Int64[])">
            <summary>
                Returns the name associated with an ownerID.
                <para></para>
                A hard maximum of 250 IDs passed in. Might change in the future depending on live results.
                Any instances of repeated ids in the string will throw immediate errors with no returns.
                If an ID is passed into the call that does not resolve the call will not return any results regardless of the
                validity of other ids.
            </summary>
            <param name="list">
                List of ownerIDs (characterID, agentID, corporationID, allianceID, or factionID) and typeIDs to
                query.
            </param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCharacterNameAsync(System.Int64[])">
            <summary>
                Returns the name associated with an ownerID.
                <para></para>
                A hard maximum of 250 IDs passed in. Might change in the future depending on live results.
                Any instances of repeated ids in the string will throw immediate errors with no returns.
                If an ID is passed into the call that does not resolve the call will not return any results regardless of the
                validity of other ids.
            </summary>
            <param name="list">
                List of ownerIDs (characterID, agentID, corporationID, allianceID, or factionID) and typeIDs to
                query.
            </param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetConquerableStations">
            <summary>
                Returns a list of conquerable stations
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetConquerableStationsAsync">
            <summary>
                Returns a list of conquerable stations
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetErrorList">
            <summary>
                Returns a list of error codes that can be returned by the EVE API servers. Error types are broken into the
                following categories according to their first digit:
                1xx - user input
                2xx - authentication
                5xx - server
                9xx - miscellaneous
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetErrorListAsync">
            <summary>
                Returns a list of error codes that can be returned by the EVE API servers. Error types are broken into the
                following categories according to their first digit:
                1xx - user input
                2xx - authentication
                5xx - server
                9xx - miscellaneous
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetFactionWarfareStats">
            <summary>
                Returns global stats on the factions in factional warfare
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetFactionWarfareStatsAsync">
            <summary>
                Returns global stats on the factions in factional warfare
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetFactionWarfareTopList">
            <summary>
                Returns Factional Warfare Top 100 Stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetFactionWarfareTopListAsync">
            <summary>
                Returns Factional Warfare Top 100 Stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetReferenceTypes">
            <summary>
                Returns the transaction types used in GetWalletJournal calls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetReferenceTypesAsync">
            <summary>
                Returns the transaction types used in GetWalletJournal calls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetSkillTree">
            <summary>
                Returns the current in-game skills (including unpublished skills).
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetSkillTreeAsync">
            <summary>
                Returns the current in-game skills (including unpublished skills).
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetTypeName(System.Int64[])">
            <summary>
                Returns the name associated with a typeID.
            </summary>
            <param name="list">A list of type ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetTypeNameAsync(System.Int64[])">
            <summary>
                Returns the name associated with a typeID.
            </summary>
            <param name="list">A list of type ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetServerStatus">
            <summary>
                Returns current Tranquility status and number of players online.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetServerStatusAsync">
            <summary>
                Returns current Tranquility status and number of players online.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCallList">
            <summary>
                Returns the mask and groupings for calls under the new Customizable API Keys authentication method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetCallListAsync">
            <summary>
                Returns the mask and groupings for calls under the new Customizable API Keys authentication method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetOwnerId(System.String[])">
            <summary>
                Returns the owner name, id and group for an object.
            </summary>
            <param name="list">A list of names or IDs</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Eve.GetOwnerIdAsync(System.String[])">
            <summary>
                Returns the owner name, id and group for an object.
            </summary>
            <param name="list">A list of names or IDs</param>
            <returns></returns>
        </member>
        <member name="T:eZet.EveLib.Modules.Corporation">
            <summary>
                Provides access to all API calls relating to a specific corporation, that is, all API paths starting with /corp in
                CCPs API.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.#ctor(eZet.EveLib.Modules.CorporationKey,eZet.EveLib.Modules.Models.Account.ApiKeyInfo.ApiKeyEntity)">
            <summary>
                Creates a new Corporation, preserving the initialized data and key from the passed in entity
            </summary>
            <param name="apiKey"></param>
            <param name="entity"></param>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.#ctor(eZet.EveLib.Modules.CorporationKey,System.Int64)">
            <summary>
                Creates a new Corporation. If the Key is initialized, the Corporation will also be initialized with data from the
                Key.
            </summary>
            <param name="apiKey">A CorporationKey</param>
            <param name="corporationId">A valid Eve Online Corporation ID</param>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.#ctor(System.Int32,System.String,System.Int64)">
            <summary>
                Creates a new corporation. This object will not be initialized.
            </summary>
            <param name="keyId"></param>
            <param name="vCode"></param>
            <param name="corporationId"></param>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.Reset">
            <summary>
                Resets the properties for this Corporation and it's CorporationKey, allowing new data to be fethed with Init() or
                InitAsync().
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.Init">
            <summary>
                Initializes this Corporations properties with values fetched from the API. Returns immediately if this Corporation
                is already initialized.
            </summary>
            <returns>This corporation</returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.InitAsync">
            <summary>
                Initializes this Corporations properties with values fetched from the API. Returns immediately if this Corporation
                is already initialized.
            </summary>
            <returns>This corporation</returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetAccountBalance">
            <summary>
                Returns the ISK balance of a corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetAccountBalanceAsync">
            <summary>
                Returns the ISK balance of a corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetAssetList">
            <summary>
                Returns a list of assets owned by a corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetAssetListAsync">
            <summary>
                Returns a list of assets owned by a corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContactList">
            <summary>
                Returns the corporation and the alliance contact lists. This is accessible by any character in any corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContactListAsync">
            <summary>
                Returns the corporation and the alliance contact lists. This is accessible by any character in any corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContainerLog">
            <summary>
                Shows corporation container audit log.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContainerLogAsync">
            <summary>
                Shows corporation container audit log.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContracts">
            <summary>
                Lists the contracts for the corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContractsAsync">
            <summary>
                Lists the contracts for the corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContractItems(System.Int64)">
            <summary>
                Lists items that a specified contract contains.
            </summary>
            <param name="contractId">A contract itemId.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContractItemsAsync(System.Int64)">
            <summary>
                Lists items that a specified contract contains.
            </summary>
            <param name="contractId">A contract itemId.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContractBids">
            <summary>
                Lists the latest bids that have been made to any recent auctions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetContractBidsAsync">
            <summary>
                Lists the latest bids that have been made to any recent auctions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetCorporationSheet">
            <summary>
                Returns attributes relating to a specific corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetCorporationSheetAsync">
            <summary>
                Returns attributes relating to a specific corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetFactionWarfareStats">
            <summary>
                If the corporation is enlisted in Factional Warfare, this will return the faction warfare statistics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetFactionWarfareStatsAsync">
            <summary>
                If the corporation is enlisted in Factional Warfare, this will return the faction warfare statistics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetIndustryJobs">
            <summary>
                Returns the corporation industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetIndustryJobsAsync">
            <summary>
                Returns the corporation industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetNewIndustryJobsAsync">
            <summary>
                Returns the currently running industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetNewIndustryJobs">
            <summary>
                Returns the currently running industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetIndustryJobsHistoryAsync">
            <summary>
                Returns currently running and ended industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetIndustryHistoryJobs">
            <summary>
                Returns currently running and ended industry jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetKillLog(System.Int64)">
            <summary>
                Returns a list of kills where this corporation received the final blow and losses of this corporation.
                <para></para>
                Returns the 100 most recent kills. You can scroll back with the killId parameter.
            </summary>
            <param name="killId">Optional; if present, return the most recent kills before the specified killID.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetKillLogAsync(System.Int64)">
            <summary>
                Returns a list of kills where this corporation received the final blow and losses of this corporation.
                <para></para>
                Returns the 100 most recent kills. You can scroll back with the killId parameter.
            </summary>
            <param name="killId">Optional; if present, return the most recent kills before the specified killID.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetLocations(System.Int64[])">
            <summary>
                Call will return the items name (or its type name if no user defined name exists) as well as their x,y,z
                coordinates.
                <para></para>
                Coordinates should all be 0 for valid locations located inside of stations.
            </summary>
            <param name="list">A list of item ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetLocationsAsync(System.Int64[])">
            <summary>
                Call will return the items name (or its type name if no user defined name exists) as well as their x,y,z
                coordinates.
                <para></para>
                Coordinates should all be 0 for valid locations located inside of stations.
            </summary>
            <param name="list">A list of item ids.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMarketOrders(System.Int64)">
            <summary>
                Returns a list of market orders that are either not expired or have expired in the past week (at most).
            </summary>
            <param name="orderId">Optional; market order ID to fetch an order that is no longer open.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMarketOrdersAsync(System.Int64)">
            <summary>
                Returns a list of market orders that are either not expired or have expired in the past week (at most).
            </summary>
            <param name="orderId">Optional; market order ID to fetch an order that is no longer open.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMedals">
            <summary>
                Returns a list of medals created by this corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMedalsAsync">
            <summary>
                Returns a list of medals created by this corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMemberMedals">
            <summary>
                Returns a list of medals issued to members.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMemberMedalsAsync">
            <summary>
                Returns a list of medals issued to members.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMemberSecurity">
            <summary>
                Returns the security roles of members in a corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMemberSecurityAsync">
            <summary>
                Returns the security roles of members in a corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMemberSecurityLog">
            <summary>
                Returns info about corporation role changes for members and who did it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMemberSecurityLogAsync">
            <summary>
                Returns info about corporation role changes for members and who did it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMemberTracking(System.Boolean)">
            <summary>
                Returns information about all members in a corporation.
            </summary>
            <param name="extended">Optional; true for extended version</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetMemberTrackingAsync(System.Boolean)">
            <summary>
                Returns information about all members in a corporation.
            </summary>
            <param name="extended">Optional; true for extended version</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetOutpostList">
            <summary>
                Returns information about the corporation's outposts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetOutpostListAsync">
            <summary>
                Returns information about the corporation's outposts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetOutpostServiceDetails(System.Int64)">
            <summary>
                Returns detailed information about a specific corporation outpost.
            </summary>
            <param name="itemId">Item ID of an outpost listed in OutpostList API call.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetOutpostServiceDetailsAsync(System.Int64)">
            <summary>
                Returns detailed information about a specific corporation outpost.
            </summary>
            <param name="itemId">Item ID of an outpost listed in OutpostList API call.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetShareholders">
            <summary>
                Returns the character and corporation share holders of a corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetShareholdersAsync">
            <summary>
                Returns the character and corporation share holders of a corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetStandings">
            <summary>
                Returns the standings from NPC corporations and factions as well as agents.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetStandingsAsync">
            <summary>
                Returns the standings from NPC corporations and factions as well as agents.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetStarbaseDetails(System.Int64)">
            <summary>
                Returns the settings and fuel status of a POS.
            </summary>
            <param name="itemId">itemId of a starbase from StarbaseList</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetStarbaseDetailsAsync(System.Int64)">
            <summary>
                Returns the settings and fuel status of a POS.
            </summary>
            <param name="itemId">itemId of a starbase from StarbaseList</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetStarbaseList">
            <summary>
                Returns the list and states of POS'es.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetStarbaseListAsync">
            <summary>
                Returns the list and states of POS'es.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetTitles">
            <summary>
                Returns the titles in the corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetTitlesAsync">
            <summary>
                Returns the titles in the corporation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetWalletJournal(System.Int32,System.Int32,System.Int64)">
            <summary>
                Returns a list of journal transactions for the corporation.
            </summary>
            <param name="division">Optional; Wallet Division used for request. Default is Master Wallet.</param>
            <param name="count">Optional; Used for specifying the amount of rows to return. Default is 50. Maximum is 2560.</param>
            <param name="fromId">Optional; Used for walking the journal backwards to get more entries.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetWalletJournalAsync(System.Int32,System.Int32,System.Int64)">
            <summary>
                Returns a list of journal transactions for the corporation.
            </summary>
            <param name="division">Optional; Wallet Division used for request. Default is Master Wallet.</param>
            <param name="count">Optional; Used for specifying the amount of rows to return. Default is 50. Maximum is 2560.</param>
            <param name="fromId">Optional; Used for walking the journal backwards to get more entries.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetWalletTransactions(System.Int32,System.Int32,System.Int64)">
            <summary>
                Returns market transactions for the corporation.
            </summary>
            <param name="division">Optional; Wallet Division used for request. Default is Master Wallet.</param>
            <param name="count">Optional; Used for specifying the amount of rows to return. Default is 50. Maximum is 2560.</param>
            <param name="fromId">Optional; Used for walking the journal backwards to get more entries.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetWalletTransactionsAsync(System.Int32,System.Int32,System.Int64)">
            <summary>
                Returns market transactions for the corporation.
            </summary>
            <param name="division">Optional; Wallet Division used for request. Default is Master Wallet.</param>
            <param name="count">Optional; Used for specifying the amount of rows to return. Default is 50. Maximum is 2560.</param>
            <param name="fromId">Optional; Used for walking the journal backwards to get more entries.</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetCustomsOfficesAsync">
            <summary>
                Returns a list of owned Customs Offices
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetCustomsOffices">
            <summary>
                Returns a list of owned Customs Offices
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetFacilitiesAsync">
            <summary>
                Returns a listing all of a corporations facilities, including POS and Outposts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Corporation.GetFacilities">
            <summary>
                Returns a listing all of a corporations facilities, including POS and Outposts.
            </summary>
            <returns></returns>
        </member>
        <member name="P:eZet.EveLib.Modules.Corporation.ApiKey">
            <summary>
                Gets the CorporationKey for this Corporation.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Corporation.CorporationId">
            <summary>
                Gets the Corporation ID.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Corporation.CorporationName">
            <summary>
                Gets the Corporation name. Note: If this object has not already been initialized, this will send a web request to
                the API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Corporation.AllianceName">
            <summary>
                Gets the Alliance name. Note: If this object has not already been initialized, this will send a web request to the
                API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Corporation.AllianceId">
            <summary>
                Gets the Alliance ID. Note: If this object has not already been initialized, this will send a web request to the
                API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Corporation.FactionId">
            <summary>
                Gets the Faction ID. Note: If this object has not already been initialized, this will send a web request to the
                API.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Corporation.FactionName">
            <summary>
                Gets the Faction name. Note: If this object has not already been initialized, this will send a web request to the
                API.
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.CorporationKey">
            <summary>
                Provides access to Corporation objects and related API calls.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.CorporationKey.#ctor(System.Int64,System.String)">
            <summary>
                Creates a new key using the provided key id and vcode.
            </summary>
            <param name="keyId"></param>
            <param name="vCode"></param>
        </member>
        <member name="M:eZet.EveLib.Modules.CorporationKey.#ctor(eZet.EveLib.Modules.ApiKey)">
            <summary>
                Creates a new CorporationKey using data from an existing ApiKey
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:eZet.EveLib.Modules.CorporationKey.InitAsync">
            <summary>
                Initializes properties.
            </summary>
            <returns></returns>
        </member>
        <member name="P:eZet.EveLib.Modules.CorporationKey.Corporation">
            <summary>
                Gets the Corporation this key provides access to.
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.EveOnlineApi">
            <summary>
                Static helper facade for accessing the Eve Online API.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.EveOnlineApi.CreateApiKey(System.Int32,System.String)">
            <summary>
                Creates a new ApiKey and returns it. This is the same as invoking new ApiKey
            </summary>
            <param name="keyId">Eve API Key ID</param>
            <param name="vCode">Eve API Verification Code (vCode)</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.EveOnlineApi.CreateCharacterKey(System.Int32,System.String)">
            <summary>
                Creates a new CharacterKey and returns it. This is the same as invoking new CharacterKey
            </summary>
            <param name="keyId">Eve API Key ID</param>
            <param name="vCode">Eve API Verification Code (vCode)</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.EveOnlineApi.CreateCorporationKey(System.Int32,System.String)">
            <summary>
                Creates a new CorporationKey returns it. This is the same as invoking new CorporationKey
            </summary>
            <param name="keyId">Eve API Key ID</param>
            <param name="vCode">Eve API Verification Code (vCode)</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.EveOnlineApi.CreateCharacter(System.Int32,System.String,System.Int64)">
            <summary>
                Creates a new CharacterKey and Character, and returns the Character.
            </summary>
            <param name="keyId">Eve API Key ID</param>
            <param name="vCode">Eve API Verification Code (vCode)</param>
            <param name="characterId">Eve Online Character ID</param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.EveOnlineApi.CreateCorporation(System.Int32,System.String,System.Int64)">
            <summary>
                Creates a new CorporationKey and Corporation, and returns the Corporation.
            </summary>
            <param name="keyId">Eve API Key ID</param>
            <param name="vCode">Eve API Verification Code (vCode)</param>
            <param name="corporationId">Eve Online Corporation ID</param>
            <returns></returns>
        </member>
        <member name="P:eZet.EveLib.Modules.EveOnlineApi.Eve">
            <summary>
                Provides access to a default instance of Eve
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.EveOnlineApi.Image">
            <summary>
                Provides access to a default instance of Image
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.EveOnlineApi.Map">
            <summary>
                Provides access to a default instance of Map
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Image">
            <summary>
                Provides access to all image related requests.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetCharacterPortrait(System.Int64,eZet.EveLib.Modules.Image.CharacterPortraitSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetCharacterPortraitAsync(System.Int64,eZet.EveLib.Modules.Image.CharacterPortraitSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetCharacterPortraitData(System.Int64,eZet.EveLib.Modules.Image.CharacterPortraitSize)">
            <summary>
                Returns the character portrait data.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetCharacterPortraitDataAsync(System.Int64,eZet.EveLib.Modules.Image.CharacterPortraitSize)">
            <summary>
                Returns the character portrait data.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetCorporationLogo(System.Int64,eZet.EveLib.Modules.Image.CorporationLogoSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetCorporationLogoAsync(System.Int64,eZet.EveLib.Modules.Image.CorporationLogoSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetCorporationLogoData(System.Int64,eZet.EveLib.Modules.Image.CorporationLogoSize)">
            <summary>
                Returns the corporation logo data.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetCorporationLogoDataAsync(System.Int64,eZet.EveLib.Modules.Image.CorporationLogoSize)">
            <summary>
                Returns the corporation logo data.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetAllianceLogo(System.Int64,eZet.EveLib.Modules.Image.AllianceLogoSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetAllianceLogoAsync(System.Int64,eZet.EveLib.Modules.Image.AllianceLogoSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetAllianceLogoData(System.Int64,eZet.EveLib.Modules.Image.AllianceLogoSize)">
            <summary>
                Returns the alliance logo.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetAllianceLogoDataAsync(System.Int64,eZet.EveLib.Modules.Image.AllianceLogoSize)">
            <summary>
                Returns the alliance logo.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetTypeIcon(System.Int64,eZet.EveLib.Modules.Image.TypeIconSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetTypeIconAsync(System.Int64,eZet.EveLib.Modules.Image.TypeIconSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetTypeIconData(System.Int64,eZet.EveLib.Modules.Image.TypeIconSize)">
            <summary>
                Returns the type icon.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetTypeIconDataAsync(System.Int64,eZet.EveLib.Modules.Image.TypeIconSize)">
            <summary>
                Returns the type icon.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetRender(System.Int64,eZet.EveLib.Modules.Image.RenderSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetRenderAsync(System.Int64,eZet.EveLib.Modules.Image.RenderSize,System.String)">
            <summary>
                Saves the image to disk , and returns the path to the image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetRenderData(System.Int64,eZet.EveLib.Modules.Image.RenderSize)">
            <summary>
                Returns the render image.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Image.GetRenderDataAsync(System.Int64,eZet.EveLib.Modules.Image.RenderSize)">
            <summary>
                Returns the render image.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Image.BaseUri">
            <summary>
                Gets or sets the base URI.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Image.RequestHandler">
            <summary>
            Gets or sets the RequestHandler
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Image.AllianceLogoSize">
            <summary>
            Represents the alliancelogo sizes
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.AllianceLogoSize.X30">
            <summary>
            30x30
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.AllianceLogoSize.X32">
            <summary>
            32x32
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.AllianceLogoSize.X64">
            <summary>
            64x64
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.AllianceLogoSize.X128">
            <summary>
            128x128
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Image.CharacterPortraitSize">
            <summary>
            Represents the characterportrait sizes
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CharacterPortraitSize.X30">
            <summary>
            30x30
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CharacterPortraitSize.X32">
            <summary>
            32x32
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CharacterPortraitSize.X64">
            <summary>
            64x64k
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CharacterPortraitSize.X128">
            <summary>
            128x128
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CharacterPortraitSize.X200">
            <summary>
            200x200
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CharacterPortraitSize.X256">
            <summary>
            256x256
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CharacterPortraitSize.X512">
            <summary>
            512x512
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CharacterPortraitSize.X1024">
            <summary>
            1024x1024
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Image.CorporationLogoSize">
            <summary>
            Represents the corporationlogo sizes
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CorporationLogoSize.X30">
            <summary>
            30x30
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CorporationLogoSize.X32">
            <summary>
            32x32
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CorporationLogoSize.X64">
            <summary>
            64x64
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CorporationLogoSize.X128">
            <summary>
            128x128
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.CorporationLogoSize.X256">
            <summary>
            256x256
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Image.RenderSize">
            <summary>
            Represents the render sizes
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.RenderSize.X32">
            <summary>
            32x32
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.RenderSize.X64">
            <summary>
            64x64
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.RenderSize.X128">
            <summary>
            128x128
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.RenderSize.X256">
            <summary>
            256x256
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.RenderSize.X512">
            <summary>
            512x512
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Image.TypeIconSize">
            <summary>
            Represents the type icon sizes
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.TypeIconSize.X32">
            <summary>
            32x32
            </summary>
        </member>
        <member name="F:eZet.EveLib.Modules.Image.TypeIconSize.X64">
            <summary>
            64x64
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Map">
            <summary>
                Provides access to Map related requests.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Map.GetFactionWarSystems">
            <summary>
                Returns a list of contestable solarsystems and the NPC faction currently occupying them.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Map.GetFactionWarSystemsAsync">
            <summary>
                Returns a list of contestable solarsystems and the NPC faction currently occupying them.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Map.GetJumps">
            <summary>
                Returns all possible stargate jumps.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Map.GetJumpsAsync">
            <summary>
                Returns all possible stargate jumps.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Map.GetKills">
            <summary>
                Returns the number of kills in solarsystems within the last hour. Only solar system where kills have been made are
                listed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Map.GetKillsAsync">
            <summary>
                Returns the number of kills in solarsystems within the last hour. Only solar system where kills have been made are
                listed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Map.GetSovereignty">
            <summary>
                Returns a list of solarsystems and what faction or alliance controls them.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Map.GetSovereigntyAsync">
            <summary>
                Returns a list of solarsystems and what faction or alliance controls them.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Map.GetSovereigntyStatus">
            <summary>
                Returns a list of all sovereignty structures in EVE.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Models.Character.AssetList.Flatten">
            <summary>
                Returns a flat list of all assets.
            </summary>
            <returns></returns>
        </member>
        <member name="P:eZet.EveLib.Modules.Models.Corporation.ContainerLog.LogEntry.TypeId">
            <summary>
                Can be empty string
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.Models.Corporation.ContainerLog.LogEntry.Quantity">
            <summary>
                Can be empty string
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Exceptions.EveOnlineException">
            <summary>
                Exception class for the Eve Online API.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Exceptions.EveOnlineException.#ctor(System.String,System.Int32,System.Net.WebException)">
            <summary>
                Constructor
            </summary>
            <param name="message">Messaged returned by the Eve Online API</param>
            <param name="code">Error code returned by the Eve Online API</param>
            <param name="iException">The WebException thrown by the request</param>
        </member>
        <member name="P:eZet.EveLib.Modules.Exceptions.EveOnlineException.ErrorCode">
            <summary>
                Gets the error code returned by the Eve Online API.
            </summary>
        </member>
        <member name="T:eZet.EveLib.Modules.Util.XmlHelper">
            <summary>
                Provides utility methods for XML element classes.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.Util.XmlHelper.#ctor(System.Xml.XmlReader)">
            <summary>
                Sets and initializes the xml document for parsing using linq to xml.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:eZet.EveLib.Modules.Util.XmlHelper.deserializeRowSet``1(System.String)">
            <summary>
                Deserializes an XML rowset using .NETs XmlSerializer.
            </summary>
            <typeparam name="T">KeyType used for deserialization.</typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Util.XmlHelper.deserialize``1(System.String)">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Util.XmlHelper.getReader(System.String)">
            <summary>
                Gets a XML reader for a regular element for use with reflected XML serialization.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.Util.XmlHelper.getRowSetReader(System.String)">
            <summary>
                Gets a XML reader for a rowset element for use with reflected XML serialization.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:eZet.EveLib.Modules.RequestHandlers.EveOnlineRequestHandler">
            <summary>
                Handles requests to the Eve API using a cache.
            </summary>
        </member>
        <member name="M:eZet.EveLib.Modules.RequestHandlers.EveOnlineRequestHandler.RequestAsync``1(System.Uri)">
            <summary>
                Requests data from uri, with error handling specific to the Eve Online API.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:eZet.EveLib.Modules.RequestHandlers.EveOnlineRequestHandler.getCacheExpirationTime(System.Object)">
            <summary>
                Gets the CachedUntil value from a EveApiResponse object.
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="P:eZet.EveLib.Modules.RequestHandlers.EveOnlineRequestHandler.EnableCacheLoad">
            <summary>
                Gets or sets whether the handler can load data from the cache.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.RequestHandlers.EveOnlineRequestHandler.EnableCacheStore">
            <summary>
                Gets or sets whether the handler can store data in cache.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.RequestHandlers.EveOnlineRequestHandler.Cache">
            <summary>
                Gets or sets the Cache.
            </summary>
        </member>
        <member name="P:eZet.EveLib.Modules.RequestHandlers.EveOnlineRequestHandler.Serializer">
            <summary>
                Gets or sets the serializer.
            </summary>
        </member>
    </members>
</doc>
